{
    "version": "0.2.0",
    "configurations": [
        // {    //由于无法通过调试窗口启动gazebo，因此把这部分注释掉。gazebo节点还是通过ros2 launch的方式启动，其他部分的节点则新建launch文件启动。
		//     // name 参数就是debug界面的选择名称
        //     "name": "gazebo_obb.launch.py", 
        //     // 此处若为c++的xmllaunch文件要写成ros，若是python写成的launch文件则填python
        //     "type": "ros",
        //     "request": "launch",
        //     //target 指向launch文件的绝对路径
        //     "target": "${workspaceFolder}/install/panda_moveit_config/share/panda_moveit_config/launch/gazebo_obb.launch.py",
        //     "console": "integratedTerminal",
        // },
        {
		    // name 参数就是debug界面的选择名称
            "name": "arm_control.launch.py",
            // 此处若为c++的xmllaunch文件要写成ros，若是python写成的launch文件则填python
            "type": "ros",
            "request": "launch",
            //target 指向launch文件的绝对路径
            "target": "${workspaceFolder}/install/panda_moveit_config/share/panda_moveit_config/launch/arm_control.launch.py",
            "console": "integratedTerminal",
        },
        {
            // name 参数就是debug界面的选择名称
            "name": "yolov8_obb.launch.py",
            // 此处若为c++的xmllaunch文件要写成ros，若是python写成的launch文件则填python
            "type": "ros",
            "request": "launch",
            //target 指向launch文件的绝对路径
            "target": "${workspaceFolder}/src/yolov8_obb/launch/yolov8_obb.launch.py",
            // "console": "integratedTerminal",
        },
        {
            "name":"Python current file",
            "type":"python",
            "request": "launch",
            "program":"${file}",
            "consle":"integratedTerminal",
        },
    ]
}